class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        if(root==null || root==p || root==q)
            return root;
        root.left = lowestCommonAncestor(root.left,p,q);
        root.right = lowestCommonAncestor(root.right,p,q);
       if(root.left==null){
            return root.right;
       }
       else if(root.right==null){
           return root.left;
       }
       return root;
    }
}


or 

class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        if(root==null || root==p || root==q)
            return root;
        TreeNode left = lowestCommonAncestor(root.left,p,q);
        TreeNode right = lowestCommonAncestor(root.right,p,q);
        if(left!=null && right!=null){
            return root;
        }
       if(left==null){
            return right;
       }
       if(right==null){
           return left;
       }
       return null;
    }
}
