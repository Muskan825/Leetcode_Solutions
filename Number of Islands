class Solution {

    public int numIslands(char[][] grid) {
        int m = grid.length;
        int n = grid[0].length;
        if(m==0){
            return 0;
        }
        int numOfIsland = 0;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]=='1'){
                    dfs(grid,i,j);
                    numOfIsland++;
                }
            }
        }
        return numOfIsland;
    }

    public void dfs(char[][] grid,int m,int n){
        if(m<0 || n<0 || m>grid.length-1 || n>grid[0].length-1)
        return;
        if( grid[m][n]=='0'){
            return;
        }
        grid[m][n]='0';     // marking visited
        dfs(grid,m+1,n);    
        dfs(grid,m-1,n);    
        dfs(grid,m,n+1);    
        dfs(grid,m,n-1);    
    }
}
