class Solution {
    public int findCenter(int[][] edges) {
        int len = edges.length+1;
        int edgeCount[] = new int[len+1];
        for(int[] edge : edges){
            int x = edge[0];
            int y = edge[1];
            edgeCount[x]++;
            edgeCount[y]++;
            if(edgeCount[x]>1){
                return x;
            }if(edgeCount[y]>1){
                return y;
            }
        }
        return 0;
    }
}




//   Optimized

import java.util.HashSet;
import java.util.Set;
class Solution {
    public int findCenter(int[][] edges) {
        Set<Integer> outerEdge = new HashSet<>();
        for(int[] edge : edges){
            if(outerEdge.contains(edge[0])){
                return edge[0];
            }else{
                outerEdge.add(edge[0]);
            }
            if(outerEdge.contains(edge[1])){
                return edge[1];
            }else{
                outerEdge.add(edge[1]);
            }
        }
        return 0;
    }
}
