class Solution {
    public ListNode swapPairs(ListNode head) {
        if(head==null){
            return null;
        }
        ListNode newNode = new ListNode(0);
        newNode.next = head;
        ListNode newHead = newNode;
        while(newNode.next!=null && newNode.next.next!=null){
            ListNode node1 = newNode.next;
            ListNode node2 = node1.next;
            ListNode nextNode = node2.next;
            newNode.next = node2;
            node2.next = node1;
            node1.next= nextNode;
            newNode = node1;
        }
        return newHead.next;
    }
}




or



class Solution {
    public ListNode swapPairs(ListNode head) {
        if(head == null || head.next == null){
            return head;
        }
        ListNode p1 = head;
        ListNode p2 = head.next;
        ListNode p3 = p2.next;
        p1.next = p3;
        p2.next = p1;
        if(p3 != null){
            p1.next = swapPairs(p3);
        }
        return p2;
    }
}
